# Funcions:
# build_desktop_deb
# desktop_postinstall

## Build desktop deb package
build_desktop_deb() {

	if [ "$DISTRIB_TYPE" == "server" ]; then
		info_msg "Ignore desktop package for server."
		return 0
	fi

	PACKAGE_LIST_DESKTOP=$(echo $PACKAGE_LIST_DESKTOP)
	PACKAGE_LIST_DESKTOP=${PACKAGE_LIST_DESKTOP// /,}

	local pkgname="${FENIX_DESKTOP_DEB}"
	local pkgdir="$BUILD_IMAGES/.tmp/${pkgname}_${VERSION}_all"
	rm -rf $pkgdir
	mkdir -p $pkgdir/DEBIAN

	info_msg "Build desktop deb..."

	cat <<-EOF > $pkgdir/DEBIAN/control
	Package: $pkgname
	Version: $VERSION
	Architecture: all
	Maintainer: Khadas <hello@khadas.com>
	Installed-Size: 1
	Section: xorg
	Priority: optional
	Depends: ${PACKAGE_LIST_DESKTOP}
	Provides: fenix-desktop-package
	Description: Fenix desktop for ${DISTRIBUTION}-${DISTRIB_RELEASE} on $KHADAS_BOARD
	EOF

	# Set up pre install script
	cat <<-EOF > $pkgdir/DEBIAN/preinst
	#!/bin/sh

	exit 0
	EOF

	chmod 755 $pkgdir/DEBIAN/preinst

	# Set up post remove script
	cat <<-EOF > $pkgdir/DEBIAN/postrm
	#!/bin/sh
	exit 0
	EOF

	chmod 755 $pkgdir/DEBIAN/postrm

	# Set up post install script
	cat <<-EOF > $pkgdir/DEBIAN/postinst
	#!/bin/bash

	# Overwrite Chromium default configuration
	if [ -d /etc/chromium-browser/ ]; then ln -sf /etc/fenix/chromium.conf /etc/chromium-browser/default; fi
	if [ -d /etc/chromium.d/ ]; then ln -sf /etc/fenix/chromium.conf /etc/chromium.d/default-flags; fi

	# Get accelerated back for chromium
	# Ubuntu
	if [ -d /usr/lib/chromium-browser/ ]; then
		if [ -d /usr/lib/aarch64-linux-gnu/ ]; then
			# arm64
			ln -fs /usr/lib/aarch64-linux-gnu/libGLESv2.so /usr/lib/chromium-browser/libGLESv2.so
			ln -fs /usr/lib/aarch64-linux-gnu/libEGL.so /usr/lib/chromium-browser/libEGL.so
		else
			# armhf
			ln -fs /usr/lib/arm-linux-gnueabihf/libGLESv2.so /usr/lib/chromium-browser/libGLESv2.so
			ln -fs /usr/lib/arm-linux-gnueabihf/libEGL.so /usr/lib/chromium-browser/libEGL.so
		fi
	fi
	# Debian
	if [ -d /usr/lib/chromium/ ]; then
		if [ -d /usr/lib/aarch64-linux-gnu/ ]; then
			# arm64
			ln -fs /usr/lib/aarch64-linux-gnu/libGLESv2.so /usr/lib/chromium/libGLESv2.so
			ln -fs /usr/lib/aarch64-linux-gnu/libEGL.so /usr/lib/chromium/libEGL.so
		else
			# armhf
			ln -fs /usr/lib/arm-linux-gnueabihf/libGLESv2.so /usr/lib/chromium/libGLESv2.so
			ln -fs /usr/lib/arm-linux-gnueabihf/libEGL.so /usr/lib/chromium/libEGL.so
		fi
	fi

	# exit if we are running chroot
	if [ "\$(stat -c %d:%i /)" == "\$(stat -c %d:%i /proc/1/root/.)" ]; then
		# Updata default configuration
		[ -d /etc/skel/.config ] && cp -arf /etc/skel/.config /home/khadas
		[ -d /etc/skel/.local ] && cp -arf /etc/skel/.local /home/khadas
		chown khadas:khadas /home/khadas/.* -R
	fi

	systemctl --no-reload enable hdmi_resolution.service >/dev/null 2>&1

	exit 0
	EOF

	chmod 755 $pkgdir/DEBIAN/postinst

	# Install default configuration for Chromium
	mkdir -p $pkgdir/etc/fenix
	cp $ROOT/archives/filesystem/blobs/desktop/chromium.conf $pkgdir/etc/fenix

	# Remove Chromium configuration gl for Amlogic platform
	if [ "$VENDOR" == "Amlogic" ]; then
		sed -i 's/export CHROMIUM_FLAGS="$CHROMIUM_FLAGS --use-gl=egl --enable-remote-extensions"/#export CHROMIUM_FLAGS="$CHROMIUM_FLAGS --use-gl=egl --enable-remote-extensions"/g' \
			$pkgdir/etc/fenix/chromium.conf
	fi

	# Install default desktop settings
	if [ -d $ROOT/archives/filesystem/blobs/desktop/${DISTRIB_TYPE} ]; then
		mkdir -p $pkgdir/etc/skel
		cp -R $ROOT/archives/filesystem/blobs/desktop/${DISTRIB_TYPE}/skel/. $pkgdir/etc/skel
	fi

	# Install icons
	mkdir -p $pkgdir/etc/fenix/icons
	cp $ROOT/archives/filesystem/blobs/desktop/icons/* $pkgdir/etc/fenix/icons

	if [ "$VENDOR" == "Amlogic" ]; then
		# Remove QT5 player for other platform
		rm -f $pkgdir/etc/skel/.local/share/applications/qt5.desktop
		rm -f $pkgdir/usr/local/bin/qt5_player
		if [ "$KHADAS_BOARD" == "VIM1" ] || [ "$KHADAS_BOARD" == "VIM2" ]; then
			rm -rf $pkgdir/etc/skel/.local/share/applications/xfce-usb3-pcie-settings.desktop
		fi
	elif [ "$VENDOR" == "Rockchip" ]; then
		# Remove unused menus for Rockchip platform
		rm -rf $pkgdir/etc/skel/.local/share/applications/xfce-hdmi-resolution-settings.desktop
	fi

	# Install xserver configurations
	mkdir -p $pkgdir/etc/X11/xorg.conf.d
	if [ -d $ROOT/archives/filesystem/blobs/desktop/xorg/${KHADAS_BOARD} ]; then
		if [ "$LINUX" == "mainline" ] && [ "$DISTRIB_RELEASE" == "buster" ]; then
			cp $ROOT/archives/filesystem/blobs/desktop/xorg/${KHADAS_BOARD}/* $pkgdir/etc/X11/xorg.conf.d
		fi
	fi

	# Create desktop deb file
	echo "Building package: $pkgname"
	fakeroot dpkg-deb -b $pkgdir ${pkgdir}.deb
	mkdir -p $BUILD_DEBS/$VERSION/$KHADAS_BOARD/${DISTRIBUTION}-${DISTRIB_RELEASE}
	cp ${pkgdir}.deb $BUILD_DEBS/$VERSION/$KHADAS_BOARD/${DISTRIBUTION}-${DISTRIB_RELEASE}
	# Cleanup
	rm -rf ${pkgdir}.deb
	rm -rf $pkgdir
}

desktop_postinstall() {
	if [ "$DISTRIB_TYPE" == "xfce" ]; then
		if [ -f $ROOTFS_TEMP/etc/skel/.config/xfce4/xfconf/xfce-perchannel-xml/xfwm4.xml ]; then
			if [ "$LINUX" == "mainline" ]; then
				sed -i 's/<property name="box_move" type="bool" value=".*/<property name="box_move" type="bool" value="false"\/>/g' \
					$ROOTFS_TEMP/etc/skel/.config/xfce4/xfconf/xfce-perchannel-xml/xfwm4.xml
				sed -i 's/<property name="box_resize" type="bool" value=".*/<property name="box_resize" type="bool" value="false"\/>/g' \
					$ROOTFS_TEMP/etc/skel/.config/xfce4/xfconf/xfce-perchannel-xml/xfwm4.xml
			else
				sed 's/name="use_compositing" type="bool" value="true"/name="use_compositing" type="bool" value="false"/' -i \
					$ROOTFS_TEMP/etc/skel/.config/xfce4/xfconf/xfce-perchannel-xml/xfwm4.xml
			fi
		fi
	fi

	# Fixup Ubuntu Lxde lightdm background
	if [ "$DISTRIBUTION" == "Ubuntu" ] && [ "$DISTRIB_TYPE" == "lxde" ]; then
		sed -i 's/#background=/background=\/etc\/alternatives\/desktop-background/g' $ROOTFS_TEMP/etc/lightdm/lightdm-gtk-greeter.conf
		if [ "$VENDOR" == "Rockchip" ]; then
			echo "@xrandr --output DP-1 --auto --output HDMI-1 --auto --same-as DP-1" >> $ROOTFS_TEMP/etc/xdg/lxsession/LXDE/autostart
		fi
	fi
}
